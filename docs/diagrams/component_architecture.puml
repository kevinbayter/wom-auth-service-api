@startuml Component_Architecture
!define RECTANGLE class

skinparam backgroundColor #FEFEFE
skinparam componentStyle rectangle

title Arquitectura de Componentes - WOM Auth Service

actor "Angular Client" as client
package "Auth Service API" {
    component "Auth Controller\n(REST API)" as controller {
        note right
            POST /auth/login
            POST /auth/refresh
            POST /auth/logout
            POST /auth/logout-all
            GET  /auth/me
        end note
    }
    
    package "Service Layer" {
        component "AuthService" as authService
        component "UserService" as userService
        component "JwtService" as jwtService
        component "TokenService" as tokenService
    }
    
    package "Security Layer" {
        component "JwtAuthFilter" as jwtFilter
        component "RateLimitFilter" as rateFilter
        component "SecurityConfig" as securityConfig
    }
    
    package "Repository Layer" {
        component "UserRepository" as userRepo
        component "RefreshTokenRepository" as tokenRepo
        component "TokenBlacklistRepository" as blacklistRepo
        component "RateLimitRepository" as rateLimitRepo
    }
}

database "PostgreSQL\n(Users & Tokens)" as postgres
database "Redis\n(Cache & Blacklist)" as redis

client --> controller : HTTP/REST
controller --> jwtFilter : Request
jwtFilter --> rateFilter : Validated Request
rateFilter --> authService : Authorized Request

authService --> userService : User Operations
authService --> jwtService : Token Generation
authService --> tokenService : Refresh Token Mgmt

userService --> userRepo : CRUD
tokenService --> tokenRepo : Token Storage
jwtService --> blacklistRepo : Token Invalidation
rateFilter --> rateLimitRepo : Rate Limiting

userRepo --> postgres : JPA
tokenRepo --> postgres : JPA
blacklistRepo --> redis : RedisTemplate
rateLimitRepo --> redis : RedisTemplate

note right of jwtService
    - RS256 Algorithm
    - Access Token: 15 min
    - Refresh Token: 7 days
    - Token Rotation
end note

note right of postgres
    Tables:
    - users
    - refresh_tokens
end note

note right of redis
    Storage:
    - Token blacklist
    - Rate limiting
    - Session cache
end note

@enduml
