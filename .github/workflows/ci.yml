name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: wom_auth_test
          POSTGRES_USER: wom_user
          POSTGRES_PASSWORD: wom_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Validate Maven wrapper
        run: |
          if [ ! -f "./mvnw" ]; then
            echo "Maven wrapper not found"
            exit 1
          fi
          chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw clean compile -B -V

      - name: Run tests
        continue-on-error: true
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/wom_auth_test
          SPRING_DATASOURCE_USERNAME: wom_user
          SPRING_DATASOURCE_PASSWORD: wom_password
          SPRING_REDIS_HOST: localhost
          SPRING_REDIS_PORT: 6379
        run: ./mvnw test -B || echo "No tests found yet"

      - name: Generate JaCoCo coverage report
        continue-on-error: true
        run: ./mvnw jacoco:report || echo "Coverage report skipped"

      - name: Archive test results
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/
          if-no-files-found: ignore

      - name: Archive coverage report
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/
          if-no-files-found: ignore

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Check for TODO/FIXME without tickets
        continue-on-error: true
        run: |
          echo "Checking for TODO/FIXME without ticket references..."
          if grep -rn "TODO\|FIXME" src/ --include="*.java" 2>/dev/null | grep -v "TODO:.*#[0-9]"; then
            echo "Warning: Found TODO/FIXME without ticket reference"
          else
            echo "All TODOs have ticket references or none found"
          fi
